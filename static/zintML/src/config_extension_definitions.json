{
  "zintML Definition": {
    "comment": [
      "Defines zintML extension of markdown",
      "author: haluk bingol",
      "email: bingol@boun.edu.tr",
      "v2021-11-12"
    ],
    "rule": {
      "^nop$": "nop"
    }
  },
  "prism": {
    "comment": [
      "***************************************************************",
      "*                    PrismJS  converter                       *",
      "***************************************************************",
      "keep this",
      "Library `pandoc` transfers md to html but it is not compatible with syntax highlighting library `prism`.",
      "This makes the correction."
    ],
    "rule": {
      "<pre class=\"bash\"><code>": "<pre><code class=\"language-bash line-numbers\">",
      "<pre class=\"css\"><code>": "<pre><code class=\"language-css line-numbers\">",
      "<pre class=\"html\"><code>": "<pre><code class=\"language-html line-numbers\">",
      "<pre class=\"java\"><code>": "<pre><code class=\"language-java line-numbers\">",
      "<pre class=\"javascript\"><code>": "<pre><code class=\"language-javascript line-numbers\">",
      "<pre class=\"js\"><code>": "<pre><code class=\"language-javascript line-numbers\">",
      "<pre class=\"latex\"><code>": "<pre><code class=\"language-latex line-numbers\">",
      "<pre class=\"markdown\"><code>": "<pre><code class=\"language-markdown line-numbers\">"
    }
  },
  "--- pages": {
    "comment": [
      "***************************************************************",
      "*                          Pages                              *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Pages-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Separator Page": {
    "comment": [
      "Separator page"
    ],
    "rule": {
      "^# ?PSEPV.*$": "<div class='zint-content-separator-page'>",
      "^# ?PSEPA.*$": "</div>"
    }
  },
  "--- generic": {
    "comment": [
      "***************************************************************",
      "*                    Generic                                  *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Generic-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Comment": {
    "comment": [
      "No effect",
      "//: Comment",
      "Comment for content developer. It has no effect."
    ],
    "rule": {
      "^# ?//.*$": ""
    }
  },
  "--- include formats": {
    "comment": [
      "***************************************************************",
      "*                 Generic include files                       *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Include-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "include css file": {
    "comment": [
      "include ``.css` file"
    ],
    "rule": {
      "^# ?ICSSV.*$": "\n<style>",
      "^# ?ICSSA.*$": "</style>"
    }
  },
  "include javascript file": {
    "comment": [
      "include `.js` file"
    ],
    "rule": {
      "^# ?IJSV.*$": "\n<script>",
      "^# ?IJSA.*$": "</script>"
    }
  },
  "--- head processing": {
    "comment": [
      "***************************************************************",
      "*                 Head processing                             *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Head-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Head processing": {
    "comment": [
      "H: head",
      "HV: copy of `template-1-doctype-head-zintMarkdownExtender.html`  <<<<<<<<<<<<<<",
      "HA: copy of `template-2-headEnd-body-title.html`"
    ],
    "rule": {
      "^# ?HV.*$": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\"/>\n<title>01pi.com</title>\n<link rel=\"shortcut icon\" href=\"../../../zintBundle/zintLib/svg/01pi.svg\">\n",
      "^# ?HA.*$": "</head>\n<body>\n<div class=\"zint-page\">\n<div id=\"idZintContentTitle\" class=\"zint-content-title\">\n<h1 class=\"zint-content-title-running\" id=\"idTitleRunning\"></h1>\n<h1 class=\"zint-content-title-slide\" id=\"idTitleSlide\"></h1>\n</div>\n"
    }
  },
  "Head processing for development": {
    "comment": [
      "HD: head",
      "HDV: copy of `template-1-doctype-head-zintMarkdownExtender.html`  <<<<<<<<<<<<<<",
      "HDA: copy of `template-2-headEnd-body-title.html`"
    ],
    "rule": {
      "^# ?HDV.*$": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\"/>\n<title>01pi.com</title>\n<link rel=\"shortcut icon\" href=\"https://www.01pi.com/0common/01pi.svg\" />",
      "^# ?HDA.*$": "</head>\n<body>\n<div class=\"zint-page\">\n<div id=\"idZintContentTitle\" class=\"zint-content-title\">\n<h1 class=\"zint-content-title-running\" id=\"idTitleRunning\"></h1>\n<h1 class=\"zint-content-title-slide\" id=\"idTitleSlide\"></h1>\n</div>\n"
    }
  },
  "Slide Title": {
    "comment": [
      "T: Title of the slide"
    ],
    "rule": {
      "^# ?TV.*$": "\n<script>ZintMarkdownExtender.setTitle(",
      "^# ?TM.*$": ",",
      "^# ?TA.*$": ");</script>\n"
    }
  },
  "--- column formatting": {
    "comment": [
      "***************************************************************",
      "*                 Column formatting                             *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Column-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "One Column": {
    "comment": [
      "TODO: deprecated",
      "DO NOT USE",
      "1: 1-column"
    ],
    "rule": {
      "^# ?1V.*$": "\n\n<div class=\"flex-row\">\n<div markdown='1' class='zint-content-1'>",
      "^# ?1A.*$": "</div>\n</div>\n"
    }
  },
  "2: Two Columns": {
    "comment": [
      "2: 2-column"
    ],
    "rule": {
      "^# ?2V.*$": "<div class='zint-flex-container'><div class='zint-flex-item-1'>",
      "^# ?2M.*$": "</div><div class='zint-flex-item-1'>",
      "^# ?2A.*$": "</div></div>"
    }
  },
  "Two Columns: Code and Visualization": {
    "comment": [
      "C&V: Code & Visualization",
      "Derived from 2-column"
    ],
    "rule": {
      "^# ?C&V.*$": "<div class='flex-row'>\n<div markdown='1' class='zint-content-2-left'>\n<h3 class='zint-content-center'>code</h3>\n</div>\n<div markdown='1' class='zint-content-2-right'>\n<h3 class='zint-content-center'>visualization</h3>\n</div>\n</div>"
    }
  },
  "Two Columns: HTML and Javascript": {
    "comment": [
      "H&J: HTML & Javascript",
      "Derived from 2-column"
    ],
    "rule": {
      "^# ?H&J.*$": "<div class='flex-row'>\n<div markdown='1' class='zint-content-2-left'>\n<h3 class='zint-content-center'>HTML</h3>\n</div>\n<div markdown='1' class='zint-content-2-right'>\n<h3 class='zint-content-center'>Javascript</h3>\n</div>\n</div>"
    }
  },
  "Three Columns": {
    "comment": [
      "3: 3-column"
    ],
    "rule": {
      "^# ?3V.*$": "\n\n<div class=\"flex-row\">\n<div markdown='1' class='zint-content-3-left'>",
      "^# ?3M.*$": "\n</div>\n<div markdown='1' class='zint-content-3-middle'>\n",
      "^# ?3R.*$": "\n</div>\n<div markdown='1' class='zint-content-3-right'>\n",
      "^# ?3A.*$": "\n</div>\n</div>\n"
    }
  },
  "Three Columns: Html and Css and Javascript": {
    "comment": [
      "H&C&J: Html & Css & Javascript",
      "Derived from 3-column"
    ],
    "rule": {
      "^# ?H&C&J.*$": "<div class=\"flex-row\"><div markdown='1' class='zint-content-3-left'><h3 class='zint-content-center'>HTML</h3></div><div markdown='1' class='zint-content-3-middle'><h3 class='zint-content-center'>CSS</h3></div><div markdown='1' class='zint-content-3-right'><h3 class='zint-content-center'>Javascript</h3></div></div>"
    }
  },
  "--- static blocks": {
    "comment": [
      "***************************************************************",
      "*                      Static blocks                          *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Static-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Example": {
    "comment": [],
    "rule": {
      "^# ?EXV.*$": "<div class='zint-content-example'>",
      "^# ?EXA.*$": "</div>"
    }
  },
  "--- interactive blocks": {
    "comment": [
      "***************************************************************",
      "*                 Interactive blocks                          *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Interactive-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Show / Hide": {
    "comment": [
      "Show/Hide"
    ],
    "rule": {
      "^# ?SHV.*$": "\n<div><button class='zint-cic-button' onclick='ZintUI.showHide()'>show</button><div class='Hidden zint-cic zint-cic-show-hide'>",
      "^# ?SHA.*$": "\n</div></div>\n"
    }
  },
  "Show Answer": {
    "comment": [
      "Show Answer"
    ],
    "rule": {
      "^# ?SAV.*$": "\n<div><button onclick='ZintUtilUI.showHide()'>show/hide</button><div class='zint-content-hidden zint-content-show-answer'>",
      "^# ?SAA.*$": "\n</div></div>\n"
    }
  },
  "Show Implementation": {
    "comment": [
      "Show Implementation"
    ],
    "rule": {
      "^# ?SIV.*$": "\n<div><button onclick='zint_show_hide()'>show/hide</button><div class='zint-content-hidden zint-content-show-implementation'>",
      "^# ?SIA.*$": "\n</div></div>\n"
    }
  },
  "Question and Answer": {
    "comment": [
      "Question with hidden Answer",
      "Answer become visible by click"
    ],
    "rule": {
      "^# ?Q&AV.*$": "<div class='zint-content-computer-question'>",
      "^# ?Q&AM.*$": "<div class='zint-content-hide zint-content-show-answer'>",
      "^# ?Q&AA.*$": "</div></div>"
    }
  },
  "Info-Box": {
    "comment": [
      "***************************************************************",
      "*                    Info box opcodes                         *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?infoBox-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Definition": {
    "comment": [
      "definition"
    ],
    "rule": {
      "^# ?DEFV.*$": "<div class='zint-cib'><h4 class='zint-cib-definition'><img src='../../../zintBundle/zintLib/markdownExtender/svg/zintMdeCIBDefinition.svg'>Definition</h4><div>",
      "^# ?DEFA.*$": "</div></div>"
    }
  },
  "IDYK-Do You Know": {
    "comment": [
      "IDYK: Do You Know"
    ],
    "rule": {
      "^# ?IDYKV.*$": "<div class='zint-cib'><h4 class='zint-cib-dyk'><img src='../../../zintBundle/zintLib/markdownExtender/svg/zintMdeCIBDYK.svg'>Do you know?</h4><div>",
      "^# ?IDYKA.*$": "</div></div>"
    }
  },
  "IRD-Reminder": {
    "comment": [
      "IRD: Reminder"
    ],
    "rule": {
      "^# ?IRDV.*$": "<div class='zint-cib'><h4 class='zint-cib-reminder'><img src='../../../zintBundle/zintLib/markdownExtender/svg/zintMdeCIBReminder.svg'>Reminder</h4><div>",
      "^# ?IRDA.*$": "</div></div>"
    }
  },
  "IRK-Remark": {
    "comment": [
      "IRK: Remark"
    ],
    "rule": {
      "^# ?IRKV.*$": "<div class='zint-cib'><h4 class='zint-cib-remark'><img src='../../../zintBundle/zintLib/markdownExtender/svg/zintMdeCIBRemark.svg'>Remark</h4><div>",
      "^# ?IRKA.*$": "</div></div>"
    }
  },
  "Question": {
    "comment": [
      "Question only"
    ],
    "rule": {
      "^# ?QV.*$": "<div class='zint-content-computer-question'>",
      "^# ?QA.*$": "</div>"
    }
  },
  "Algorithm": {
    "comment": [],
    "rule": {
      "^# ?ALV.*$": "<div class='zint-content-algorithm'>",
      "^# ?ALA.*$": "</div>"
    }
  },
  "Computer Output": {
    "comment": [],
    "rule": {
      "^# ?COV.*$": "<div class='zint-content-computer-output'><pre>",
      "^# ?COA.*$": "</pre></div>"
    }
  },
  "Citation": {
    "comment": [],
    "rule": {
      "^# ?CIV.*$": "<div class='zint-content-citation'>",
      "^# ?CIA.*$": "</div>"
    }
  },
  "See": {
    "comment": [],
    "rule": {
      "^# ?SEV.*$": "<div class='zint-content-see'>",
      "^# ?SEA.*$": "</div>"
    }
  },
  "Syntax": {
    "comment": [],
    "rule": {
      "^# ?SYV.*$": "<div class='zint-content-syntax'>",
      "^# ?SYA.*$": "</div>"
    }
  },
  "inline ---": {
    "comment": [
      "***************************************************************",
      "*                      inline code                            *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?Inline-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "inline cc{ Citation": {
    "comment": [
      "TODO ?"
    ],
    "rule": {
      "cc{": "<span class='zint-inline-cite'>",
      "}cc": "</span>"
    }
  },
  "inline def{ Defined": {
    "comment": [
      "inline: Use to mark the defined term"
    ],
    "rule": {
      "def{": "<span class='zint-inline-defined'>",
      "}def": "</span>"
    }
  },
  "inline ee{ Emphasis": {
    "comment": [
      "inline: emphasis"
    ],
    "rule": {
      "ee{": "<span class='zint-inline-emphasis'>",
      "}ee": "</span>"
    }
  },
  "inline fileid{: file name": {
    "comment": [
      "File name"
    ],
    "rule": {
      "^fileid{": "<p class='zint-generic-file-id'>",
      "}fileid": "</p>"
    }
  },
  "inline loc{ Code Location": {
    "comment": [
      "memory location in ST&M"
    ],
    "rule": {
      "loc{": "<span class='zint-inline-code-location'>",
      "}loc": "</span>"
    }
  },
  "inline syx{ Syntax": {
    "comment": [
      "TODO ?"
    ],
    "rule": {
      "syx{": "<span class='zint-inline-syntax'>",
      "}syx": "</span>"
    }
  },
  "inline val{ Code Value": {
    "comment": [
      "value of a memory location in ST&M"
    ],
    "rule": {
      "val{": "<span class='zint-inline-code-value'>",
      "}val": "</span>"
    }
  },
  "inline var{ Code Variable": {
    "comment": [
      "variable name in ST&M"
    ],
    "rule": {
      "var{": "<span class='zint-inline-code-variable'>",
      "}var": "</span>"
    }
  },
  "inline lv{ Link": {
    "comment": [
      "inline line as <a> tag>",
      "ex: lv{ url }lm{ visible text }la"
    ],
    "rule": {
      "lv{": "<a href='",
      "}lm{": "'  rel='nofollow' target='_blank'>",
      "}la": "</a>"
    }
  },
  "inline kw{ Keyword": {
    "comment": [
      "TODO ?"
    ],
    "rule": {
      "kw{": "<span class='zint-inline-keyword'>",
      "}kw": "</span>"
    }
  },
  "SBS---": {
    "comment": [
      "***************************************************************",
      "*                    SBS  step-by-step                         *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?SBS-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "SBS: description": {
    "comment": [
      "Step-by-step",
      "SBS description in `*.dscr.md` file"
    ],
    "rule": {
      "^# ?SBSV.*$": "<div id=idInDescription class='Hidden'>\n<div class='zint-sbs-description-step'>",
      "^# ?SBSM.*$": "</div>\n<div class='zint-sbs-description-step'>",
      "^# ?SBSA.*$": "</div>\n</div>\n",
      "^step{": "<p class='zint-sbs-step-no'>",
      "}step": "</p>"
    }
  },
  "SBS: include board": {
    "comment": [
      "SBS: include `*.board.js` file",
      "similar to `IJSV`"
    ],
    "rule": {
      "^# ?SBSBV.*$": "\n<script class='zint-board-js'>",
      "^# ?SBSBA.*$": "</script>"
    }
  },
  "SBS: include code": {
    "comment": [
      "SBS: include `*.code.md` file"
    ],
    "rule": {
      "^# ?SBSCV.*$": "\n<div id='idInCode' class='Hidden'>\n",
      "^# ?SBSCA.*$": "</div>\n"
    }
  },
  "SBS: include description": {
    "comment": [
      "SBS: include `*.dscr.md` file"
    ],
    "rule": {
      "^# ?SBSDV.*$": "<div id='idInDescription'  class='Hidden'>",
      "^# ?SBSDA.*$": "</div>"
    }
  },
  "SBS: include highlight": {
    "comment": [],
    "rule": {
      "^# ?SBSHV.*$": "\n<pre id='idInHighlight'  class='Hidden'>",
      "^# ?SBSHA.*$": "</pre>\n"
    }
  },
  "SBS: include trace": {
    "comment": [],
    "rule": {
      "^# ?SBSTV.*$": "\n<pre id='idInTrace'  class='Hidden'>",
      "^# ?SBSTA.*$": "</pre>\n"
    }
  },
  "--- classify ": {
    "comment": [
      "***************************************************************",
      "*                    classify                                  *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?classify-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "h: Unused": {
    "comment": [
      "***************************************************************",
      "*                    unused                                   *",
      "***************************************************************"
    ],
    "rule": {
      "^# ?unused-XXXXXXXXXXXXXXXX-V.*$": "***************************************************************"
    }
  },
  "Open Project": {
    "comment": [],
    "enable-groups": true,
    "rule": {
      "^# ?OPV$": "<div class='softdev4u-openExampleDiv'",
      "^# ?OP-language=([\\w\\d]+)$": "data-softdev4u-language='\\1'",
      "^# ?OP-project=([\\w\\d-]+)$": "data-softdev4u-exampleName='\\1'",
      "^# ?OP-filePath=([\\w\\d_/]+.[a-z]+)$": "data-softdev4u-filePath='\\1'",
      "^# ?OP-lineNumber=([\\d]+)$": "data-softdev4u-lineNumber=\\1",
      "^# ?OP-linkTitle=([\\w\\d\\s()-]+)$": "data-softdev4u-linkTitle='\\1'>",
      "^# ?OPA$": "</div>"
    }
  }
}
